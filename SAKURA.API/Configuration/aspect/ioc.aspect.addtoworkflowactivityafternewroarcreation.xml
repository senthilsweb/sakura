<?xml version="1.0"?>
<objects xmlns="http://www.springframework.net">  
  <!--1) Advice Object(also called as Aspect or Concerns). This will be attached dynamically @ runtime.-->
  <object id="AddToWorkflowActivityAfterNewRoarCreationAdvice" type="SAKURA.FACADE.Advice.AddToWorkflowActivityAfterNewRoarCreation, SAKURA.FACADE" />
  <!--2) Advisor who has knowledge on where to attach the advice based on regular expression pattern recognition. 
  In AOP this is called as pointcut-->
  <object id="AddToWorkflowActivityAfterNewRoarCreationAdvisor" type="Spring.Aop.Support.RegularExpressionMethodPointcutAdvisor">
	<property name="patterns">
	  <list>
		<!--Look for exact match of method name "Save"-->
		<value>Save</value>
	  </list>
	</property>
	<!--This has the knowledge of "when the match is found which advice (object id of the advice) needs to be attached?". 
	In this case attach "AddToWorkflowActivityAfterNewRoarCreationAdvice"-->
	<property name="advice" ref="AddToWorkflowActivityAfterNewRoarCreationAdvice" />
  </object>
  <!--3) This defines where to attach the Advice / concerns i.e. which class to be monitored or intercepted and then what advice to
  be attached i.e. the interceptor name-->
  <object id="WorkflowAuditEventStoreProxy" type="Spring.Aop.Framework.AutoProxy.ObjectNameAutoProxyCreator, Spring.Aop">
	<property name="ObjectNames">
	  <list>
		<value>PageFacade</value>
	  </list>
	</property>
	<property name="InterceptorNames">
	  <list>
		<!--The below Advisor has knowledge on list of point-cuts i.e. where the Advice should be attached-->
		<value>AddToWorkflowActivityAfterNewRoarCreationAdvisor</value>
		<!--Note:We can also directly give Advice Name without the advisor and in that case the Advice will be attached for all methods in the Matching Object-->
		<!--<value>AddToWorkflowActivityAfterNewRoarCreationAdvice</value>-->
	  </list>
	</property>
  </object>
</objects>